"""Traverse currency to inherit instrument class

Revision ID: 4bc018fd4ed8
Revises: e21db593fdad
Create Date: 2023-05-02 07:07:02.172555

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "4bc018fd4ed8"
down_revision = "e21db593fdad"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("instruments_currency_fkey", "instruments", type_="foreignkey")
    op.drop_constraint(
        "options_settlement_currency_fkey", "options", type_="foreignkey"
    )
    op.drop_constraint(
        "portfolio_cost_currency_fkey", "portfolio_cost", type_="foreignkey"
    )
    op.drop_constraint("currencies_pkey", "currencies")
    op.alter_column("currencies", "uid", existing_type=sa.UUID(), nullable=False)
    op.alter_column(
        "currencies", "iso", existing_type=sa.VARCHAR(length=3), nullable=True
    )
    op.drop_index("currencies_iso_idx", table_name="currencies")
    op.drop_index("currencies_position_uid_idx", table_name="currencies")
    op.drop_index("currencies_uid_idx", table_name="currencies")
    op.create_foreign_key(
        op.f("currencies_uid_fkey"), "currencies", "instruments", ["uid"], ["uid"]
    )
    op.drop_column("currencies", "name")
    op.drop_column("currencies", "image_link")
    op.drop_column("currencies", "position_uid")
    op.drop_column("currencies", "lot")
    op.drop_column("currencies", "figi")
    op.drop_column("currencies", "ticker")
    op.create_primary_key("currencies_pkey", "currencies", ["uid"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "currencies",
        sa.Column("ticker", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "currencies",
        sa.Column("figi", sa.VARCHAR(length=12), autoincrement=False, nullable=True),
    )
    op.add_column(
        "currencies", sa.Column("lot", sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.add_column(
        "currencies",
        sa.Column("position_uid", sa.UUID(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "currencies",
        sa.Column("image_link", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "currencies", sa.Column("name", sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.drop_constraint(op.f("currencies_uid_fkey"), "currencies", type_="foreignkey")
    op.create_index("currencies_uid_idx", "currencies", ["uid"], unique=False)
    op.create_index(
        "currencies_position_uid_idx", "currencies", ["position_uid"], unique=False
    )
    op.create_index("currencies_iso_idx", "currencies", ["iso"], unique=False)
    op.drop_constraint("currencies_pkey", "currencies")
    op.alter_column(
        "currencies", "iso", existing_type=sa.VARCHAR(length=3), nullable=False
    )
    op.alter_column("currencies", "uid", existing_type=sa.UUID(), nullable=True)
    op.create_primary_key("currencies_pkey", "currencies", ["iso"])
    op.create_foreign_key(
        "portfolio_cost_currency_fkey",
        "portfolio_cost",
        "currencies",
        ["currency"],
        ["iso"],
    )
    op.create_foreign_key(
        "options_settlement_currency_fkey",
        "options",
        "currencies",
        ["settlement_currency"],
        ["iso"],
    )
    op.create_foreign_key(
        "instruments_currency_fkey", "instruments", "currencies", ["currency"], ["iso"]
    )
    # ### end Alembic commands ###
